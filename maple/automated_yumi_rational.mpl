# Input: R_06 and p_06

#b := convert(0/100*degrees, radians);
#g := convert(0/100*degrees, radians);
#xb := 0;
#xg := 0;
#t1 := 50;
#t2 := -355;
#t3 := 354;

#b := convert(20*degrees, radians);
#g := convert(30*degrees, radians);
xb := 289/1639;
xg := 209/780;
t1 := 5012/100;
t2 := -35534/100;
t3 := 35456/100;

Digits := 25;


# Define the system of equations
P1 := (xb, xg, t1, t2, t3) -> 60*x1^2*x2^2 - 332*x2 - t1 + 60*x2^2*xb^2 + 60*x2^2*xg^2 - 2*t2*x1 + 2*t3*x2 + 54*x1*x5 - 54*x5*xb + t1*x1^2 + t1*x2^2 - t1*xb^2 - t1*xg^2 - 332*x1^2*x2 - 332*x2*xb^2 - 332*x2*xg^2 + 60*x2^2 + 2*t2*x1*x2^2 + 2*t3*x1^2*x2 - 2*t2*x1*xb^2 + 2*t3*x2*xb^2 - 2*t2*x1*xg^2 + 2*t3*x2*xg^2 - 54*x1*x2^2*x5 - 54*x1*x5*xb^2 + 54*x1^2*x5*xb + 54*x2^2*x5*xb + 54*x1*x5*xg^2 + 54*x5*xb*xg^2 - t1*x1^2*x2^2 + t1*x1^2*xb^2 + t1*x2^2*xb^2 + t1*x1^2*xg^2 + t1*x2^2*xg^2 - t1*xb^2*xg^2 - 332*x1^2*x2*xb^2 - 332*x1^2*x2*xg^2 - 332*x2*xb^2*xg^2 + 60*x1^2*x2^2*xb^2 + 60*x1^2*x2^2*xg^2 + 60*x2^2*xb^2*xg^2 - 216*x2*x5*xb*xg - t1*x1^2*x2^2*xb^2 - t1*x1^2*x2^2*xg^2 + t1*x1^2*xb^2*xg^2 + t1*x2^2*xb^2*xg^2 - 332*x1^2*x2*xb^2*xg^2 + 60*x1^2*x2^2*xb^2*xg^2 + 2*t2*x1*x2^2*xb^2 + 2*t3*x1^2*x2*xb^2 + 2*t2*x1*x2^2*xg^2 + 2*t3*x1^2*x2*xg^2 - 2*t2*x1*xb^2*xg^2 + 2*t3*x2*xb^2*xg^2 + 54*x1*x2^2*x5*xb^2 - 54*x1^2*x2^2*x5*xb - 54*x1*x2^2*x5*xg^2 - 54*x1*x5*xb^2*xg^2 - 54*x1^2*x5*xb*xg^2 - 54*x2^2*x5*xb*xg^2 - 216*x1^2*x2*x5*xb*xg - t1*x1^2*x2^2*xb^2*xg^2 + 2*t2*x1*x2^2*xb^2*xg^2 + 2*t3*x1^2*x2*xb^2*xg^2 + 54*x1*x2^2*x5*xb^2*xg^2 + 54*x1^2*x2^2*x5*xb*xg^2:

P2 := (xb, xg, t1, t2, t3) -> 2*x1^2*x2^2 + 2*x2^2*x3^2 - 2*x2^2*x5^2 + 2*x2^2*xb^2 + 2*x1^2*xg^2 + 2*x3^2*xg^2 - 2*x5^2*xg^2 + 2*xb^2*xg^2 - 4*x1*xb + 2*x1^2 + 2*x3^2 - 2*x5^2 + 2*xb^2 - 4*x1*x2^2*xb + 4*x1*x3^2*xb - 4*x1*x5^2*xb + 4*x1*xb*xg^2 + 8*x1*x2*x3 - 8*x2*x3*xb + 8*x3*xb*xg - 2*x1^2*x3^2*x5^2 + 2*x1^2*x3^2*xb^2 - 2*x1^2*x5^2*xb^2 - 2*x3^2*x5^2*xb^2 + 2*x1^2*x2^2*xg^2 + 2*x2^2*x3^2*xg^2 - 2*x2^2*x5^2*xg^2 + 2*x2^2*xb^2*xg^2 + 8*x1*x2*x3*x5^2 - 8*x1*x2*x3*xb^2 + 8*x1^2*x2*x3*xb - 8*x2*x3*x5^2*xb + 8*x1*x2*x3*xg^2 + 8*x1^2*x3*xb*xg + 8*x2*x3*xb*xg^2 - 8*x2^2*x3*xb*xg + 8*x3*x5^2*xb*xg - 2*x1^2*x2^2*x3^2*x5^2 + 2*x1^2*x2^2*x3^2*xb^2 - 2*x1^2*x2^2*x5^2*xb^2 - 2*x2^2*x3^2*x5^2*xb^2 - 2*x1^2*x3^2*x5^2*xg^2 + 2*x1^2*x3^2*xb^2*xg^2 - 2*x1^2*x5^2*xb^2*xg^2 - 2*x3^2*x5^2*xb^2*xg^2 + 4*x1*x2^2*x3^2*xb - 4*x1*x2^2*x5^2*xb + 4*x1*x3^2*x5^2*xb + 4*x1*x2^2*xb*xg^2 - 4*x1*x3^2*xb*xg^2 + 4*x1*x5^2*xb*xg^2 - 8*x1*x2*x3*x5^2*xb^2 + 8*x1^2*x2*x3*x5^2*xb + 8*x1*x2*x3*x5^2*xg^2 - 8*x1*x2*x3*xb^2*xg^2 - 8*x1^2*x2*x3*xb*xg^2 - 8*x1^2*x2^2*x3*xb*xg + 8*x1^2*x3*x5^2*xb*xg + 8*x2*x3*x5^2*xb*xg^2 - 8*x2^2*x3*x5^2*xb*xg - 2*x1^2*x2^2*x3^2*x5^2*xg^2 + 2*x1^2*x2^2*x3^2*xb^2*xg^2 - 2*x1^2*x2^2*x5^2*xb^2*xg^2 - 2*x2^2*x3^2*x5^2*xb^2*xg^2 + 4*x1*x2^2*x3^2*x5^2*xb - 4*x1*x2^2*x3^2*xb*xg^2 + 4*x1*x2^2*x5^2*xb*xg^2 - 4*x1*x3^2*x5^2*xb*xg^2 - 8*x1*x2*x3*x5^2*xb^2*xg^2 - 8*x1^2*x2*x3*x5^2*xb*xg^2 - 8*x1^2*x2^2*x3*x5^2*xb*xg - 4*x1*x2^2*x3^2*x5^2*xb*xg^2
:

P3 := (xb, xg, t1, t2, t3) -> 26244*x3 - 3664*t3 - 219840*x2 - 324*t2 - 114480*x5 + 4*t1^2*x1^2 + 4*t1^2*x2^2 + 4*t2^2*x1^2 + 4*t1^2*x3^2 + 4*t2^2*x2^2 + 4*t3^2*x1^2 + 4*t2^2*x3^2 + 4*t3^2*x2^2 + 4*t1^2*x5^2 + 4*t3^2*x3^2 + 4*t2^2*x5^2 + 4*t3^2*x5^2 - 196435*x1^2*x2^2 + 294177*x1^2*x3^2 - 251839*x2^2*x3^2 + 553053*x1^2*x5^2 - 208099*x2^2*x5^2 + 282513*x3^2*x5^2 + 648*t1*x1 - 4672*t1*x2 - 648*t2*x3 + 480*t3*x2 + 480*t1*x2^2 + 324*t2*x1^2 - 324*t2*x2^2 - 3664*t3*x1^2 - 324*t2*x3^2 + 1008*t3*x2^2 - 3016*t3*x3^2 - 324*t2*x5^2 - 3664*t3*x5^2 - 219840*x1^2*x2 + 26244*x1^2*x3 - 180960*x2*x3^2 + 26244*x2^2*x3 - 114480*x1^2*x5 - 219840*x2*x5^2 - 114480*x2^2*x5 + 26244*x3*x5^2 - 114480*x3^2*x5 + 4*t1^2 + 4*t2^2 + 4*t3^2 + 564717*x1^2 - 196435*x2^2 + 294177*x3^2 + 553053*x5^2 + 648*t1*x1*x2^2 + 4672*t1*x1^2*x2 + 648*t1*x1*x3^2 + 960*t2*x1*x2^2 - 3376*t1*x2*x3^2 + 648*t2*x1^2*x3 + 480*t3*x1^2*x2 + 648*t1*x1*x5^2 - 648*t2*x2^2*x3 - 4672*t1*x2*x5^2 + 480*t3*x2*x3^2 - 648*t2*x3*x5^2 + 480*t3*x2*x5^2 - 480*t1*x1^2*x2^2 + 324*t2*x1^2*x2^2 + 480*t1*x2^2*x3^2 + 324*t2*x1^2*x3^2 + 1008*t3*x1^2*x2^2 - 324*t2*x2^2*x3^2 - 3016*t3*x1^2*x3^2 + 480*t1*x2^2*x5^2 + 324*t2*x1^2*x5^2 + 360*t3*x2^2*x3^2 - 324*t2*x2^2*x5^2 - 3664*t3*x1^2*x5^2 - 324*t2*x3^2*x5^2 + 1008*t3*x2^2*x5^2 - 3016*t3*x3^2*x5^2 - 180960*x1^2*x2*x3^2 + 26244*x1^2*x2^2*x3 - 219840*x1^2*x2*x5^2 - 114480*x1^2*x2^2*x5 + 26244*x1^2*x3*x5^2 - 114480*x1^2*x3^2*x5 - 180960*x2*x3^2*x5^2 + 26244*x2^2*x3*x5^2 - 114480*x2^2*x3^2*x5 + 1296*t1*x1*x3 - 9344*t2*x1*x2 + 4*t1^2*x1^2*x2^2 + 4*t1^2*x1^2*x3^2 + 4*t2^2*x1^2*x2^2 + 4*t1^2*x2^2*x3^2 + 4*t2^2*x1^2*x3^2 + 4*t3^2*x1^2*x2^2 + 4*t1^2*x1^2*x5^2 + 4*t2^2*x2^2*x3^2 + 4*t3^2*x1^2*x3^2 + 4*t1^2*x2^2*x5^2 + 4*t2^2*x1^2*x5^2 + 4*t3^2*x2^2*x3^2 + 4*t1^2*x3^2*x5^2 + 4*t2^2*x2^2*x5^2 + 4*t3^2*x1^2*x5^2 + 4*t2^2*x3^2*x5^2 + 4*t3^2*x2^2*x5^2 + 4*t3^2*x3^2*x5^2 - 251839*x1^2*x2^2*x3^2 - 208099*x1^2*x2^2*x5^2 + 282513*x1^2*x3^2*x5^2 - 263503*x2^2*x3^2*x5^2 - 480*t1*x1^2*x2^2*x3^2 + 324*t2*x1^2*x2^2*x3^2 - 480*t1*x1^2*x2^2*x5^2 + 360*t3*x1^2*x2^2*x3^2 + 324*t2*x1^2*x2^2*x5^2 + 480*t1*x2^2*x3^2*x5^2 + 324*t2*x1^2*x3^2*x5^2 + 1008*t3*x1^2*x2^2*x5^2 - 324*t2*x2^2*x3^2*x5^2 - 3016*t3*x1^2*x3^2*x5^2 + 360*t3*x2^2*x3^2*x5^2 - 180960*x1^2*x2*x3^2*x5^2 + 26244*x1^2*x2^2*x3*x5^2 - 114480*x1^2*x2^2*x3^2*x5 + 1296*t1*x1*x2^2*x3 - 6752*t2*x1*x2*x3^2 + 1296*t1*x1*x3*x5^2 - 9344*t2*x1*x2*x5^2 + 4*t1^2*x1^2*x2^2*x3^2 + 4*t2^2*x1^2*x2^2*x3^2 + 4*t1^2*x1^2*x2^2*x5^2 + 4*t3^2*x1^2*x2^2*x3^2 + 4*t1^2*x1^2*x3^2*x5^2 + 4*t2^2*x1^2*x2^2*x5^2 + 4*t1^2*x2^2*x3^2*x5^2 + 4*t2^2*x1^2*x3^2*x5^2 + 4*t3^2*x1^2*x2^2*x5^2 + 4*t2^2*x2^2*x3^2*x5^2 + 4*t3^2*x1^2*x3^2*x5^2 + 4*t3^2*x2^2*x3^2*x5^2 - 263503*x1^2*x2^2*x3^2*x5^2 + 648*t1*x1*x2^2*x3^2 + 3376*t1*x1^2*x2*x3^2 + 960*t2*x1*x2^2*x3^2 + 648*t2*x1^2*x2^2*x3 + 648*t1*x1*x2^2*x5^2 + 4672*t1*x1^2*x2*x5^2 + 480*t3*x1^2*x2*x3^2 + 648*t1*x1*x3^2*x5^2 + 960*t2*x1*x2^2*x5^2 - 3376*t1*x2*x3^2*x5^2 + 648*t2*x1^2*x3*x5^2 + 480*t3*x1^2*x2*x5^2 - 648*t2*x2^2*x3*x5^2 + 480*t3*x2*x3^2*x5^2 - 480*t1*x1^2*x2^2*x3^2*x5^2 + 324*t2*x1^2*x2^2*x3^2*x5^2 + 360*t3*x1^2*x2^2*x3^2*x5^2 + 1296*t1*x1*x2^2*x3*x5^2 - 6752*t2*x1*x2*x3^2*x5^2 + 4*t1^2*x1^2*x2^2*x3^2*x5^2 + 4*t2^2*x1^2*x2^2*x3^2*x5^2 + 4*t3^2*x1^2*x2^2*x3^2*x5^2 + 648*t1*x1*x2^2*x3^2*x5^2 + 3376*t1*x1^2*x2*x3^2*x5^2 + 960*t2*x1*x2^2*x3^2*x5^2 + 648*t2*x1^2*x2^2*x3*x5^2 + 480*t3*x1^2*x2*x3^2*x5^2 + 564717:

P4 := (xb, xg, t1, t2, t3) -> 2*t2 + 1670*x3 - 108*x5 - 611*x1^2*x2^2 - 449*x1^2*x3^2 - 449*x2^2*x3^2 - 611*x1^2*x5^2 - 611*x2^2*x5^2 - 449*x3^2*x5^2 - 4*t1*x1 - 4*t3*x3 - 240*x2*x3 - 2*t2*x1^2 + 2*t2*x2^2 - 2*t2*x3^2 + 2*t2*x5^2 + 1670*x1^2*x3 + 342*x2^2*x3 - 108*x1^2*x5 - 108*x2^2*x5 + 1670*x3*x5^2 - 108*x3^2*x5 - 611*x1^2 - 611*x2^2 - 449*x3^2 - 611*x5^2 - 4*t1*x1*x2^2 + 4*t1*x1*x3^2 - 4*t1*x1*x5^2 - 4*t3*x1^2*x3 + 4*t3*x2^2*x3 - 4*t3*x3*x5^2 - 240*x1^2*x2*x3 - 240*x2*x3*x5^2 - 2*t2*x1^2*x2^2 + 2*t2*x1^2*x3^2 - 2*t2*x2^2*x3^2 - 2*t2*x1^2*x5^2 + 2*t2*x2^2*x5^2 - 2*t2*x3^2*x5^2 + 342*x1^2*x2^2*x3 - 108*x1^2*x2^2*x5 + 1670*x1^2*x3*x5^2 - 108*x1^2*x3^2*x5 + 342*x2^2*x3*x5^2 - 108*x2^2*x3^2*x5 - 8*t1*x2*x3 - 449*x1^2*x2^2*x3^2 - 611*x1^2*x2^2*x5^2 - 449*x1^2*x3^2*x5^2 - 449*x2^2*x3^2*x5^2 - 16*t2*x1*x2*x3 + 2*t2*x1^2*x2^2*x3^2 - 2*t2*x1^2*x2^2*x5^2 + 2*t2*x1^2*x3^2*x5^2 - 2*t2*x2^2*x3^2*x5^2 + 342*x1^2*x2^2*x3*x5^2 - 108*x1^2*x2^2*x3^2*x5 + 8*t1*x1^2*x2*x3 - 8*t1*x2*x3*x5^2 - 449*x1^2*x2^2*x3^2*x5^2 + 4*t1*x1*x2^2*x3^2 - 4*t1*x1*x2^2*x5^2 + 4*t3*x1^2*x2^2*x3 + 4*t1*x1*x3^2*x5^2 - 4*t3*x1^2*x3*x5^2 + 4*t3*x2^2*x3*x5^2 - 240*x1^2*x2*x3*x5^2 - 16*t2*x1*x2*x3*x5^2 + 2*t2*x1^2*x2^2*x3^2*x5^2 + 8*t1*x1^2*x2*x3*x5^2 + 4*t1*x1*x2^2*x3^2*x5^2 + 4*t3*x1^2*x2^2*x3*x5^2 - 611:

# Substitute in EE pose
p1 := P1(xb, xg, t1, t2, t3):
p2 := P2(xb, xg, t1, t2, t3):
p3 := P3(xb, xg, t1, t2, t3):
p4 := P4(xb, xg, t1, t2, t3):

p_23_3 := resultant(p2, p3, x3):
f_p_23_3 := factors(p_23_3):
v1 := select(p -> depends(p, x1) and depends(p, x2) and depends(p, x5), f_p_23_3[2])[1][1]:
print("found v1");

p_24_3 := resultant(p2, p4, x3):
f_p_24_3 := factors(p_24_3):
v2 := select(p -> depends(p, x1) and depends(p, x2) and depends(p, x5), f_p_24_3[2])[1][1]:
print("found v2");

p1_v1_5 := resultant(p1, v1, x5):
f_p1_v1_5 := factors(p1_v1_5):
w1 := select(p -> depends(p, x1) and depends(p, x2), f_p1_v1_5[2])[1][1]:
print("found w1");

p1_v2_5 := resultant(p1, v2, x5):
f_p1_v2_5 := factors(p1_v2_5):
w2 := select(p -> depends(p, x1) and depends(p, x2), f_p1_v2_5[2])[1][1]:
print("found w2");

o1 := resultant(w1, w2, x2):
print("found f_o1");
fsolve(o1);

f_o1 := factors(o1):
print("Degree of each factor:"):
map(v -> degree(v[1]), f_o1[2]);
print("Multiplicity of each factor:");
map(v -> v[2], f_o1[2]);
print("Roots of each factor:");
map(v -> [fsolve(v[1])], f_o1[2]);